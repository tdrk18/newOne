name: Upload to AppStore Connect

on:
  issue_comment:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    if: contains(github.event.comment.html_url, '/pull/') && startsWith(github.event.comment.body, '/submit')
    steps:
      - name: Get branch name
        id: upstream_branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "::set-output name=branchname::$(curl -H "Authorization: token ${GITHUB_TOKEN}" ${{ github.event.issue.pull_request.url }} | jq '.head.ref' | sed 's/\"//g')"

      - name: Create bitrise API call
        id: call_bitrise_api
        if: success() && startsWith(steps.upstream_branch.outputs.branchname, 'release')
        env:
          BITRISE_SLUG: ${{ secrets.BITRISE_SLUG }}
          BITRISE_TOKEN: ${{ secrets.BITRISE_TOKEN }}
          BITRISE_WORKFLOW: "Empty-workflow"
        run: |
          echo "::set-output name=result::$(curl -X POST "https://api.bitrise.io/v0.1/apps/${BITRISE_SLUG}/builds" -H "accept: application/json" -H "Authorization: ${BITRISE_TOKEN}" -H "Content-Type: application/json" -d "{ \"build_params\": { \"branch\": \"${{ steps.upstream_branch.outputs.branchname }}\", \"workflow_id\": \"${BITRISE_WORKFLOW}\" }, \"hook_info\": { \"type\": \"bitrise\" }}")"

      - name: Post comment
        if: success() && startsWith(steps.upstream_branch.outputs.branchname, 'release')
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: 'bitrise API実行結果\n<details>\n<summary>詳細</summary>\n\n```\n${{ steps.call_bitrise_api.outputs.result }}\n```\n</details>',
            });
